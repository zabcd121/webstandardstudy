@charset "utf-8";

/*스킵네비게이션*/
#skip{position:relative;}
#skip a{position:absolute; left:0px; top:-35px;; border:1px solid #fff; color:#fff; background:#333; line-height:30px; width:140px; text-align:center;}
/*position:absolute은 위치가 절대적이라는건데 자유적으로 움직일 수 있는 대신에 영역이 없어져서 붕떠있는것 같은 효과임*/
#skip a:active,
#skip a:focus{top:0;}
/*탭을 눌렀을 때 생기게 하려면 active랑 focus를 써야 함*/


/*레이아웃*/
#wrap{}
#header{height:325px; background: url(../img/header_bg.jpg) center top repeat-x;}/*백그라운드는 원래 왼쪽정렬이라 확대하면 왼쪽을 기준으로 이동하는데 position으로 center top으로 해주면됨*/
#contents{}
#footer{border-top:1px solid #eee;}

/*컨텐츠 레이아웃*/
#cont_nav{background-color:#f6fdff;}
#cont_tit{background-color:#EAF7FD;}
#cont_ban{background-color:#dceff7;}
#cont_cont{background-color:#f6fdff;}

/*컨테이너*/
.container{width:990px; margin:0 auto; height:inherit; background:rgba(255,255,255,0.3);}

/*헤더*/
.header .header-menu{text-align:right;}
/*header-menu는 자식요소이므로 앞에 한칸띄우고 써야됨
a태그는 인라인요소임 그리고 텍스트자체가 전체영역이



라서 a태그에 text-align:right로는 움직이지 않음
inline요소는 padding이 적용되지 않음 그래서 인라인성질을 유지하면서 블록으로 바꿔주는 display:inline-block으로 해줘야 함*/
.header .header-menu a{color:#fff; padding:10px 0px 10px 13px; display:inline-block;}
.header .header-menu a:hover{color:#666;}
.header .header-tit{text-align:center; }
.header .header-tit h1{background-color:#4aa8d4; font-size:28px; padding:5px 20px 6px 20px; display:inline-block; color:#fff; margin-top:40px; font-weight:normal; text-transform:uppercase;}
.header .header-tit a{display:inline-block; background-color:#2698cb; font-size:18px; color:#fff; padding:5px 20px 6px 20px; margin-top:-5px;}
/*h1이 블록구조라서 컨테이너 너비 전체로 블록으로 생겨버리니까 맞게 블록을 만들려면 inline으로 바꿔야하고 padding, margin을 쓰려면 inline-block으로 바꿔야함*/
.header .header-icon{text-align:center; margin-top:30px;}
.header .header-icon a{width:60px; height:60px; display:inline-block; background:url(../img/icon.png); margin:0 3px;}
/*이미지 스프라이트 기법*/
.header .header-icon a.icon1{background-position:0 0;}
.header .header-icon a.icon2{background-position:0 -60px;}
.header .header-icon a.icon3{background-position:0 -120px;}
.header .header-icon a.icon4{background-position:0 -180px;}
.header .header-icon a.icon1:hover{background-position:-60px 0;}
.header .header-icon a.icon2:hover{background-position:-60px -60px;}
.header .header-icon a.icon3:hover{background-position:-60px -120px;}
.header .header-icon a.icon4:hover{background-position:-60px -180px;}
/*margin 상하 좌우와 다르게 background-position은 좌우 상하임*/

/*float:left로 인한 영역깨짐(height:0) 방지법
1. 깨지는 영역에 똑같이 float:left를 사용한다.(X)-->한번 써버리면 밑의 모든 박스에 float:left를 사용하게 됩니다.
2.float의 성질을 차단하는 clear:both;를 사용한다.(X)-->어떤 영역이 깨졌는지 찾기 어려움.
3.float를 사용한 상위 박스한테 overflow:hidden을 사용합니다.(O)-->현재는 제일 많이 사용(overflow:hidden을 상위박스에 쓰면 영역을 잡아버리는 효과가 나기때문)
4.clearfix를 사용합니다.(O)-->현재는 가장좋은 방법이지만 반응형에서 사용예정
*/

/* 전체 메뉴 */
.nav{overflow:hidden; padding:30px 0;}
.nav > div{float:left; width:40%;}
.nav > div:last-child{width:20%;} /*ie9부터 사용 가능*/
.nav > div.last{width:20%} /*모든 버전까지 사용가능*/
/*괄호를 붙이면 바로 밑에있는 첫번째 자식만 선택한다는 뜻/ .nav div{}를 쓰면 자식의 자식에 div가 있으면 또 선택이됨*/
.nav > div h3{font-size: 18px; color:#25a2d0; margin-bottom: -4px;}
.nav > div ol{overflow:hidden;}
.nav > div ol li{float:left; width:50%;}
.nav > div.last ol li{width:100%;}
.nav > div ol li a:hover{text-decoration:underline;}

/* 타이틀 */
/*position:relative;가 기준점 역할을 함
만약 여기서 기준점을 안잡으면 .btn의 버튼이 브라우저의 왼쪽탑의 기준점으로 오른쪽탑으로 가버리기때문에 부모에서 기준점을 잡아야함.
*/
.tit{position:relative;}
.tit h2{font-size: 40px; text-align:center; padding: 5px 0; letter-spacing:2px; color:#2c94c4; font-family: 'Nanum Brush Script', cursive;}
.tit .btn{position:absolute; top:5px; right:0; width: 60px; height: 60px; background:url(../img/icon.png) no-repeat 0 -600px;}

/* 배너 */
.ban{position:relative; padding:24px 0 20px;}
.ban a.prev{position:absolute; left:-80px; top:60px; width: 43px; height: 43px; background:url(../img/icon.png) no-repeat -150px 0;}
.ban a.next{position:absolute; right:-80px; top:60px; width: 43px; height: 43px; background:url(../img/icon.png) no-repeat -150px -43px;}
/*position:absolute이므로 container의 width에 제약받지않고 빠져나갈수있는거임*/
.ban a.prev:hover{background-position:-193px 0;}
.ban a.next:hover{background-position:-193px -43px;}
.ban ul{overflow: hidden;}
.ban ul li{float: left; width: 330px;}
.ban ul li:last-child{text-align:right;} /* ie9부터 적용*/
.ban ul li:nth-child(2){text-align:center;} /* ie9부터 적용*/
.ban ul li.ban_img1{text-align:left;}
.ban ul li.ban_img2{text-align: center;}
.ban ul li.ban_img3{text-align:right;}
.ban ul li img{border: 4px solid #dcdcdc;}
/*바텀쪽에 빈여백이 생기는것을 없애기위해 img에 display를 block으로 하면 text-align이 적용이 안된다. 그래서 inline-block으로 바꾸면 이번에는 여백이 생겨버린다. 그래서 그냥 블록구조안쓰고 패딩값을 바꾼다*/
.ban ul li img:hover{border-color:#98bcdc;}

/* 컨텐츠 */
.cont{overflow:hidden; padding-top:30px;}/*margin-top으로 여백을 만들면 하얀색배경으로 만들어지므로 패딩으로해야지 같은색으로 만들어짐*/
.cont .column{position: relative; float:left; width: 289px; height: 363px; margin:0 30px 30px 0; padding-right:30px;} /*position:relative는 밑에 아이콘 넣는 작업할 때 ico_img 클래스에서 절대값을 줘서 이 클래스를 기준으로 해야하므로 넣어줌*/
.cont .col1{border-right:1px solid #c8c8c8;}
.cont .col2{border-right:1px solid #c8c8c8;}
.cont .col3{margin-right:0; padding-right:0;}
.cont .col4{border-right:1px solid #c8c8c8;}
.cont .col5{border-right:1px solid #c8c8c8;}
.cont .col6{margin-right:0; padding-right:0;}

.cont .column .ico_img{display: block; width: 60px; height: 60px; background:url(../img/icon.png) no-repeat; position: absolute; left: 0; top: 0;}
.cont .column .ico_tit{padding-left: 70px; font-size: 16px; color:#2c94c4;}
.cont .column .ico_desc{padding-left: 70px; border-bottom:1px solid #d0d0d0; padding-bottom: 15px; margin-bottom: 15px;}

.cont .col1 .ico_img{background-position: 0 -240px;}
.cont .col2 .ico_img{background-position: 0 -300px;}
.cont .col3 .ico_img{background-position: 0 -360px;}
.cont .col4 .ico_img{background-position: 0 -420px;}
.cont .col5 .ico_img{
	background-position: 0 -480px;}
.cont .col6 .ico_img{background-position: 0 -540px;}
.cont .col1 .ico_img:hover{background-position: -60px -240px;}
.cont .col2 .ico_img:hover{background-position: -60px -300px;}
.cont .col3 .ico_img:hover{background-position: -60px -360px;}
.cont .col4 .ico_img:hover{background-position: -60px -420px;}
.cont .col5 .ico_img:hover{background-position: -60px -480px;}
.cont .col6 .ico_img:hover{background-position: -60px -540px;}

/* 게시판 */
.notice {position:relative;}
.notice h4{font-size: 14px; color:#0093bd; padding-bottom: 3px; font-weight:bold;}
.notice ul li{overflow:hidden; text-overflow: ellipsis; white-space:nowrap; background:url(../img/dot.gif) no-repeat 0 8px; padding-left: 8px;} /*게시판 글의 li를 한줄로 표현하게 하기위해서 overflow:hidden사용 overflow:hidden은 float:left사용할때 쓰는거 이외에도 내가 지정한 영역을 벗어나는 것은 나오게 하지말게 쓰는거임/  text-overflow: ellipsis; 한줄 내가 지정한 영역을 벗어나면 ...으로 바꿔주는역할 두줄을 한줄로 바꾸려면 white-space:nowrap;을 사용해야됨*/
.notice ul li a{font-size: 12px;}
.notice a.more{position:absolute; right:0; top:0; display:block; background:url(../img/icon.png) -150px -90px; width: 17px; height: 17px;}

/* 게시판2 */
.notice2{position:relative; margin-top: 15px;}
.notice2 h4{font-size: 14px; color:#0093bd; padding-bottom: 3px; font-weight:bold;}
.notice2 ul{}
.notice2 li{overflow:hidden; background:url(../img/dot.gif) no-repeat 0 8px; padding-left: 8px;}
.notice2 li a{float:left; width: 65%; overflow: hidden; text-overflow:ellipsis; white-space:nowrap;}
.notice2 li span{float: right; width: 30%; text-align:right;}
.notice2 a.more{position:absolute; right:0; top:0; display:block; background:url(../img/icon.png) -150px -90px; width: 17px; height: 17px;}

/* 게시판3 */
.notice3{position:relative; margin-top: 15px;}
.notice3 h4{font-size: 14px; color:#0093bd; padding-bottom: 3px; font-weight:bold;}
.notice3 li{position: relative; padding: 8px 0 14px 60px; }
.notice3 li a img{width: 50px; position:absolute; left: 0; top: 0; border:1px solid #0093bd;}/*float로 코딩하면 코드가 지저분해지므로 position:absolute를 줘서 옆에 글자들을 padding값으로 조정함*/
.notice3 li a strong{display: block;}
.notice3 li a span{display: block; overflow: hidden; text-overflow:ellipsis; white-space:nowrap; font-size: 12px;}
.notice3 a.more{position:absolute; right:0; top:0; display:block; background:url(../img/icon.png) -150px -90px; width: 17px; height: 17px;}

/* 마우스 오버효과 */
.notice_hover h4{font-size: 14px; color:#0093bd; padding-bottom: 3px; font-weight:bold;}
.notice_hover ul{overflow: hidden;}
.notice_hover li{float:left; width: 93px; margin-right: 5px; text-align: center;}
.notice_hover li:last-child{margin-right:0;} /*ie9부터 적용/ li에서 margin-right를 적용하면 모든 li에 적용되므로 원래 width를 초과하게되어서 마지막에만 적용안되게함*/
.notice_hover li.last{margin-right: 0;} /*모든 브라우저 버전 사용가능*/
.notice_hover li a span{position: relative; display: block; width: 93px; height: 93px; line-height:93px;}/*li에서 text-align:center한 뒤에 완전중앙에 위치하게 하려면 line-height를 써야됨*/
.notice_hover li a span img{width: 100%;}/*부모요소의 li의 width와 같다.*/
.notice_hover li a span em{visibility: hidden; position: absolute; left: 0;	top: 0; background: rgba(0,0,0,0.7); color:#fff; width: 100%; height: 100%;} /* em태그는 기본성질이 글씨가 기울어지기 때문에 reset해줘야됨 visibility: hidden은 글자를 안보이게 만들어줌 */
.notice_hover li a span:hover em{visibility: visible;}/*visibility: hidden로 숨겨둔것을 visible로 마우스hover시 보이게 함*/
.notice_hover li a strong{display:inline-block; padding-top: 3px; font-size: 12px;}

/* 마우스 오버효과2 */
.notice_hover2 h4{font-size:14px; color:#0093bd; padding-bottom: 3px; font-weight: bold;}
.notice_hover2 ul{overflow:hidden;}
.notice_hover2 li{float:left; width:93px; margin-right: 5px; text-align: center;}
.notice_hover2 li:last-child{margin-right: 0;}
.notice_hover2 li a span{position:relative; display: block; width: 93px; height: 93px;} /*여기서 width값과 height값 주는게 em요소를 블럭화하고 이미지영역만큼 크기를잡으려고*/
.notice_hover2 li a span img{width: 100%;}
.notice_hover2 li a span em{visibility:hidden; position:absolute; left: 0; bottom: 0; width: 100%; background:rgba(0,0,0,0.7); color:#fff;}
.notice_hover2 li a span:hover em{visibility:visible;}
.notice_hover2 li a strong{display: inline-block; padding-top: 3px; font-size: 12px;}
/* 컨텐츠 요소를 보이지 않게 하는 방법
1.display:none (영역까지 같이 사라지게함) <-->반대 display:block
2.visibility:hidden; (영역은 그대로 있고 텍스트만 사라짐) <-->반대 visibility:visible;
3.opacity:0; (영역은 그대로 있고 텍스트만 사라짐) <-->반대 opacity:1; opacity는 css의 불투명도를 나타냄 0이면 투명 1이면 불투명
4.width:0; height:0; overflow:hidden;
*/

/* 탭 메뉴 */
.tab_menu {position: relative; border: 1px solid #ccc; padding: 8px; height: 105px;}
.tab_menu ul {overflow: hidden; border-bottom: 1px solid #ccc; }
.tab_menu ul li {float: left; border: 1px solid #ccc; margin-right: -1px; margin-bottom: -1px; } /*margin-right: -1px; border줄이 겹칠때 두줄처럼 보이는것을 한줄로 보이게 할때만 사용*/
.tab_menu ul li a {padding: 5px 10px; display: block;}/*padding값을 위의 li한테 주면 텍스트를 벗어난 border안에서는 클릭이 안되므로 a태그에 주고 display:block을 해준다.*/
.tab_menu ul li ul {position: absolute; left: 0; top: 48px; border: 0; width: 270px; }/*밑에 a태그에 width값을 지정안해주면 벗어나버리기때문에 지정*/
.tab_menu ul li ul li{float: none; border:0; background:url(../img/dot.gif) no-repeat 9px 8px; padding-left: 18px;}/*위의 li에서 적용한 float:left가 적용되지 않기 위해 none으로 지정*/
.tab_menu ul li ul li a{overflow: hidden; text-overflow:ellipsis; white-space:nowrap; width:100%; padding:0 0 3px 0;} /*2단구조의 문제점이 위의 ul li a태그 속성에서 값을 변경하면 ul li ul li a태그에서도 적용됨*/
.tab_menu ul li.active{background:#2c94c4;}
.tab_menu ul li.active a{color:#fff;}
.tab_menu ul li.active ul li a {color:#333;}/*위의 .active a태그에 흰색칼라를 넣으면 밑에 ul li ul li a태그의 텍스트도 흰색이 되므로 따로 검은색으로 바꿔줌*/
/*나중에 자바스크립트로 작동해볼 예정*/

/* 게시판4 */
.notice4{position: relative; border:1px solid #ccc;}
.notice4 h4{border-bottom:1px solid #ccc; font-size: 14px; color:#0093bd; font-weight:700; padding:8px 10px;}
.notice4 h4 em{color:#cf3292;}/*글자를 강조하고 싶다면 em태그를 사용하고 글씨의 중요성을 강조하고 싶다면  strong태글를 사용 글씨의 중요성과 강조를 고려하지 않는 단순참고용표시는 mark*/
.notice4 ul{padding:10px;}
.notice4 ul li{overflow:hidden; background:url(../img/dot.gif) no-repeat 9px 8px; padding-left: 18px; padding-bottom: 2px;}
.notice4 ul li a{float:left; width:60%; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;}
.notice4 ul li span{float:right; width:30%; text-align: right;}
.notice4 a.more{position:absolute; right:9px; top:9px; }

/* 갤러리 */
.gallery {position: relative; border: 1px solid #ccc; height: 254px; overflow: hidden;}
.gallery h4 {font-size: 14px; color: #0093bd; border-bottom: 1px solid #ccc; padding: 10px 0 8px 11px; font-weight: bold;}
.gallery .gallery_btn {position: absolute; right: 5px; top: 7px;}
.gallery .gallery_btn ul {overflow: hidden;}
.gallery .gallery_btn li {float: left; margin: 1px 2px;}
.gallery .gallery_btn li a {display: block; width: 23px; height: 23px; background: url(../img/icon.png) no-repeat;}
.gallery .gallery_btn li.gb_icon1 a {background-position: -150px -120px}
.gallery .gallery_btn li.gb_icon2 a {background-position: -150px -143px}
.gallery .gallery_btn li.gb_icon3 a {background-position: -150px -166px}
.gallery .gallery_btn li.gb_icon4 a {background-position: -150px -189px}
.gallery .gallery_btn li.gb_icon1 a:hover {background-position: -173px -120px}
.gallery .gallery_btn li.gb_icon2 a:hover {background-position: -173px -143px}
.gallery .gallery_btn li.gb_icon3 a:hover {background-position: -173px -166px}
.gallery .gallery_btn li.gb_icon4 a:hover {background-position: -173px -189px}
.gallery .gallery_img img {width: 100%;}

/* 로그인 */
.login-wrap{margin-bottom:15px; background: #f2f4f5; padding:15px;}
.login_header{overflow: hidden; font-size: 12px; height: 30px;}
.login_header .lh_check{float: left; padding-right: 15px;}
.login_header .lh_check .input_check{vertical-align:-2px;}
.login_header .lh_ip{float: left;}
.login_header .lh_ip em{color:#0093bd; text-decoration: underline;}
.login_content{position: relative;}
.login_content .lc_btn{position: absolute; right: 0; top:0; width: 62px; height: 47px; background: #fff; border:1px solid #bebebe;}
.login_content .input_text{width: 182px; height: 16px; padding:2px 5px; border:1px solid #bebebe; margin-bottom:3px; background: #fff;}
.login_footer{}

.login_footer{margin-top: 5px;}
.login_footer li{display: inline;}/*display: inline; 텍스트는 간단하게 inline으로 하면 블록구조가 아니므로 일렬로 정렬됨*/
.login_footer li a{font-size: 12px;}

/* 팝업 */
.popup h4{font-size: 14px; color:#0093bd; font-weight: 700; padding-bottom: 4px; }
.popup ul{overflow: hidden;}
.popup ul li{float:left; width:93px; margin-right: 5px;}
.popup ul li.last{margin-right: 0;} /*last-child를 써도되지만 호환성을 위해 이것을 사용*/
.popup ul li a{}
.popup img{width: 100%;}

/* 푸터 */
.footer{padding:25px 0; text-align: center;}
.footer ul{margin-bottom: 20px;}
.footer ul li{position: relative; display: inline; padding:0 7px 0 10px;}/*display:inline과 float:left 방법 2가지가 있는데 여기서는 float:left를 쓰면 text-align:center가 적용이 되지 않으므로 display:inline을 사용*/
.footer ul li:before{content:''; width: 1px; height: 12px; background: #ccc; position: absolute; left: 0; top: 2px;} /*before를 이용하여 가상요소를 생성*/
.footer ul li:first-child:before{width:0; height: 0;}
.footer .w3c{margin-top: 15px;}